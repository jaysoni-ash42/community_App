[{"/home/jay/React_app/Community_app/src/index.js":"1","/home/jay/React_app/Community_app/src/component/App.js":"2","/home/jay/React_app/Community_app/src/reportWebVitals.js":"3","/home/jay/React_app/Community_app/src/component/Nav.js":"4","/home/jay/React_app/Community_app/src/component/Home.js":"5","/home/jay/React_app/Community_app/src/component/Users.js":"6","/home/jay/React_app/Community_app/src/firebaseConfig/firebase.js":"7","/home/jay/React_app/Community_app/src/component/post.js":"8","/home/jay/React_app/Community_app/src/component/Uposts.js":"9","/home/jay/React_app/Community_app/src/component/Search.js":"10","/home/jay/React_app/Community_app/src/StateProvider.js":"11","/home/jay/React_app/Community_app/src/reducer.js":"12","/home/jay/React_app/Community_app/src/Context.js":"13","/home/jay/React_app/Community_app/src/component/CovidNews.js":"14"},{"size":606,"mtime":1612184802502,"results":"15","hashOfConfig":"16"},{"size":1581,"mtime":1612184304592,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1609574935995,"results":"18","hashOfConfig":"16"},{"size":5663,"mtime":1612184874087,"results":"19","hashOfConfig":"16"},{"size":1311,"mtime":1612257272539,"results":"20","hashOfConfig":"16"},{"size":5821,"mtime":1612186567589,"results":"21","hashOfConfig":"16"},{"size":605,"mtime":1611730951970,"results":"22","hashOfConfig":"16"},{"size":6117,"mtime":1612183671307,"results":"23","hashOfConfig":"16"},{"size":3607,"mtime":1612185112005,"results":"24","hashOfConfig":"16"},{"size":1972,"mtime":1612119730241,"results":"25","hashOfConfig":"16"},{"size":568,"mtime":1612183315239,"results":"26","hashOfConfig":"16"},{"size":484,"mtime":1612117505670,"results":"27","hashOfConfig":"16"},{"size":129,"mtime":1612118280039,"results":"28","hashOfConfig":"16"},{"size":1319,"mtime":1612258725238,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"3bdpo2",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/jay/React_app/Community_app/src/index.js",[],["64","65"],"/home/jay/React_app/Community_app/src/component/App.js",["66"],"import React, { useEffect, useState } from 'react';\nimport \"./App.css\"\nimport Nav from \"./Nav\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Users from \"./Users\";\nimport Search from \"./Search\";\nimport { auth } from \"../firebaseConfig/firebase\";\nimport { useStateValue } from \"../StateProvider\";\nimport { SearchPost, SearchUser } from \"../Context\";\nimport { WbIncandescentTwoTone } from '@material-ui/icons';\n\nfunction App() {\n\n  const [{ user }, dispatch] = useStateValue();\n  const [searchuser, setValue] = useState([])\n  const [searchpost, setPost] = useState([]);\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        dispatch({\n          type: \"setuser\",\n          payload: user\n        })\n      }\n      else {\n        dispatch({\n          type: \"logout\",\n          payload: null\n        })\n      }\n    })\n  }, [user, dispatch]);\n  return (\n    <div className=\"app\">\n      <Router>\n        <SearchPost.Provider value={{ searchpost, setPost }}>\n          <SearchUser.Provider value={{ searchuser, setValue }}>\n            <Nav />\n            <Switch>\n              <Route path=\"/user/:username\" exact render={(props) => (user != null ? <Users /> : <Redirect to='/' />)} />\n              <Route path=\"/\" exact render={(props) => (<Home />)} />\n              <Route path=\"/search/:username\" exact render={(props) => (<Search />)} />\n            </Switch>\n          </SearchUser.Provider>\n        </SearchPost.Provider>\n      </Router>\n    </div>\n  );\n};\nexport default App;\n","/home/jay/React_app/Community_app/src/reportWebVitals.js",[],"/home/jay/React_app/Community_app/src/component/Nav.js",["67","68"],"import React, { useEffect, useState, useContext } from 'react'\nimport \"./nav.css\"\nimport firebase from \"firebase/app\"\nimport { auth } from \"../firebaseConfig/firebase\";\nimport Button from '@material-ui/core/Button';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { ExitToAppRounded, AccountBoxOutlined, HomeOutlined } from \"@material-ui/icons\"\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { Input } from '@material-ui/core';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Search from \"@material-ui/icons/Search\";\nimport Axios from \"axios\";\nimport { useStateValue } from \"../StateProvider\";\nimport { SearchPost, SearchUser } from \"../Context\";\n\n\nfunction Nav() {\n  const [{ user }, dispatchUser] = useStateValue();\n  const { searchuser, setValue } = useContext(SearchUser);\n  const { searchpost, setPost } = useContext(SearchPost);\n  const [anchorEl, setAnchorEl] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [bool, setBool] = useState(false);\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    if (Object.keys(search).length <= 0) {\n      alert(\"Type username\");\n      setSearch(\"\");\n    }\n    else {\n      Axios.get(\"http://localhost:9000/search/\" + search.toLowerCase()).then((response) => {\n        if (response.status === 200 || 304) {\n          setValue(response.data.user);\n          setPost(response.data.post);\n          window.localStorage.setItem(\"value\", JSON.stringify(response.data.user));\n          window.localStorage.setItem(\"post\", JSON.stringify(response.data.post));\n          setBool(true);\n          setSearch(\"\");\n        }\n        else {\n          alert(\"No user found named\" + search);\n          setSearch(\"\");\n        }\n\n      }).catch((err) => {\n        alert(err.message);\n        setSearch(\"\");\n      })\n\n    }\n  }\n  function handleUpload(user) {\n    Axios.post(\"http://localhost:9000/user\", {\n      userid: \"\" + user.uid,\n      userimg: user.photoURL,\n      username: user.email\n    }).then((response) => {\n      console.log(response.data);\n    }).catch((err) => {\n      alert(err.message);\n    });\n  }\n\n\n\n  const handleClick = (event) => {\n    event.preventDefault();\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(false);\n  };\n  useEffect(() => {\n    setBool(false);\n  }, [bool])\n  const Login_inUSer = (e) => {\n    e.preventDefault();\n    var provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth()\n      .signInWithPopup(provider)\n      .then((result) => {\n        /** @type {firebase.auth.OAuthCredential} */\n        var user = result.user;\n        handleUpload(user);\n        dispatchUser({\n          type: \"setuser\",\n          payload: user\n        })\n      }).catch((error) => {\n        alert(error.message);\n      });\n  }\n  const Log_out = (e) => {\n    e.preventDefault();\n    auth.signOut();\n    dispatchUser({\n      type: \"logout\",\n      payload: null\n    })\n    setAnchorEl(null);\n  }\n  return (\n    <nav className=\"nav\">\n      <div className=\"header\">\n        <img style={{ width: 50, height: 50, borderRadius: 50 }} src=\"https://firebasestorage.googleapis.com/v0/b/reactapp-8566f.appspot.com/o/images%2Fstock-vector-community-logo-icon-template-vector-app-1453629920.jpg?alt=media&token=2af0e608-4fb3-4fce-83cb-2edac9b1311c\" alt=\"https://firebasestorage.googleapis.com/v0/b/reactapp-8566f.appspot.com/o/images%2Fstock-vector-community-logo-icon-template-vector-app-1453629920.jpg?alt=media&token=2af0e608-4fb3-4fce-83cb-2edac9b1311c\" />\n        <h3 style={{ marginLeft: 5 }}>Community App</h3>\n      </div>\n      <div>\n        <form className=\"searchbar\" onSubmit={handleSearch} >\n          <Input type=\"text\" placeholder=\"Search\" disableUnderline={true} style={{ textAlign: \"center\", paddingTop: 5, paddingLeft: 5, width: '40vh' }} onChange={(e) => setSearch(e.target.value)} />\n          <IconButton style={{ padding: 0 }}><Search /></IconButton>\n          {\n            bool ? <Redirect style={{ textDecoration: 'none', color: 'black' }} to={`/search/${search}`} /> : null\n          }\n        </form>\n      </div>\n      {\n        user ? <div className=\"login_signup_button\">\n          <h4 className=\"name\"><strong>{user.email.toUpperCase()}</strong></h4>\n          <Avatar alt={user.photoURL} src={user.photoURL} style={{ cursor: \"pointer\" }} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} />\n          <Menu\n            style={{ padding: 10 }}\n            id=\"simple-menu\"\n            variant=\"selectedMenu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            <NavLink style={{ textDecoration: 'none', color: 'black' }} to=\"/\" >\n              <MenuItem onClick={handleClose} style={{ margin: 10 }}><HomeOutlined style={{ padding: 0, marginRight: 5, color: \"gray\" }} />Home</MenuItem>\n            </NavLink>\n            <NavLink style={{ textDecoration: 'none', color: 'black' }} to={\"/user/\" + user.email} >\n              <MenuItem onClick={handleClose} style={{ margin: 10 }}><AccountBoxOutlined style={{ padding: 0, marginRight: 5, color: \"gray\" }} />Profile</MenuItem>\n            </NavLink>\n            <MenuItem onClick={Log_out} style={{ margin: 10 }}><ExitToAppRounded style={{ padding: 0, marginRight: 5, color: \"gray\" }} />Log out</MenuItem>\n          </Menu>\n        </div>\n          : <div className=\"login_signup_button\">\n            <Button type=\"Submit\" onClick={Login_inUSer}>Login In</Button>\n          </div>\n\n      }\n    </nav>\n  )\n}\n\nexport default Nav\n","/home/jay/React_app/Community_app/src/component/Home.js",[],"/home/jay/React_app/Community_app/src/component/Users.js",["69"],"import React, { useState, useEffect } from 'react';\nimport { auth, storage } from \"../firebaseConfig/firebase\";\nimport \"./users.css\";\nimport Axios from \"axios\";\nimport Uposts from \"./Uposts\";\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Button from \"@material-ui/core/Button\"\nimport Modal from \"@material-ui/core/Modal\"\nimport { PostAdd } from \"@material-ui/icons\"\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useStateValue } from \"../StateProvider\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    justifyContent: 'space-evenly',\n    marginTop: 10\n  },\n  gridList: {\n    padding: theme.spacing(1)\n  },\n}));\n\n\nfunction Users() {\n  const [{ user }, dispatch] = useStateValue();\n  const classes = useStyles();\n  const [post, setPost] = useState([]);\n  const [openUpload, setUpload] = useState(false);\n  const [caption, setCaption] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [progress, setProgress] = useState(0);\n  const [value, setValue] = useState(false);\n  const handleChange = (e) => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n\n    }\n  };\n  useEffect(() => {\n    if (user === null) {\n      setTimeout(() => {\n        Axios.get(\"http://localhost:9000/post/\" + auth.currentUser.uid).then((post) => {\n          setPost(post.data);\n        }).catch((err) => {\n          alert(err.message);\n        })\n      }, 6000)\n    }\n    else {\n      Axios.get(\"http://localhost:9000/post/\" + user.uid).then((post) => {\n        setPost(post.data);\n      }).catch((err) => {\n        alert(err.message + \" something went wrong check network connection\");\n      })\n    }\n  }, [value, user])\n  const handleUpload = (e) => {\n    e.preventDefault();\n    console.log(Object.keys(caption).length + \" \" + Object.keys(image).length);\n    if (Object.keys(caption).length <= 0 || Object.keys(image).length < 0) {\n      alert(\"need to select the data before upload\")\n      return;\n    }\n    const uploadtask = storage.ref(`images/${image.name}`).put(image);\n    uploadtask.on(\n      \"state_changed\",\n      (snapshot) => {\n        var progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100)\n        setProgress(progress);\n      },\n      (error) => {\n        console.log(error.message);\n        alert(error.message);\n        setUpload(false);\n      },\n      () => {\n        storage.ref(\"images\")\n          .child(image.name)\n          .getDownloadURL()\n          .then((url) => {\n            Axios.post(\"http://localhost:9000/post\", {\n              userid: \"\" + auth.currentUser.uid,\n              userimg: auth.currentUser.photoURL,\n              img: url,\n              post: caption,\n              username: auth.currentUser.email\n            }).then((response) => {\n              console.log(response);\n              setProgress(0);\n              setCaption(\"\");\n              setImage(\"\");\n              setValue(!value);\n              setUpload(false);\n            }).catch((err) => {\n              alert(err.message);\n              setUpload(false);\n              setProgress(0);\n              setCaption(\"\");\n              setImage(\"\");\n            });\n          }).catch((err) => {\n            alert(err.message);\n            setUpload(false);\n          })\n      }\n    )\n\n  }\n\n  const openupload = (e) => {\n    e.preventDefault();\n    setUpload(true);\n  }\n  const closeUpload = (e) => {\n    e.preventDefault();\n    setUpload(false);\n  }\n  return (\n    <div className=\"user\">\n      <Modal\n        disableBackdropClick={true}\n        open={openUpload}\n        onClose={closeUpload}\n        className=\"Modal_state\"\n      >\n        <div className=\"Modal\" >\n          <div className=\"Imageupload\">\n            <h1 style={{ textAlign: \"center\", fontFamily: \"monospace\", border: \"1px solid lightgray\", padding: 10 }}><strong>Upload a Post</strong></h1>\n            <LinearProgress style={{ marginTop: 10 }} variant=\"determinate\" value={progress} />\n            <input type=\"text\" className=\"Imageupload_progress\" placeholder=\"Enter a caption....\" onChange={(e) => setCaption(e.target.value)} />\n            <input type=\"file\" className=\"Imageupload_progress\" onChange={handleChange} accept=\"image/*,video/*,audio/*\" />\n            <div style={{ display: 'flex', justifyContent: 'space-evenly', padding: 10 }}><center><Button style={{ backgroundColor: \"lightgray\", margin: 10 }} onClick={handleUpload} >Upload</Button><Button style={{ backgroundColor: \"lightgray\", margin: 10 }} onClick={closeUpload} >close</Button></center></div>\n            <p className=\"post\"># POst a creative post to let the world Know about your work</p>\n          </div>\n        </div>\n      </Modal>\n      {\n        user ?\n          <div className=\"user_header\">\n            <img className=\"profile_image\" alt={user.photoURL} src={user.photoURL} />\n            <h1 style={{ fontFamily: \"monospace\" }} >{user.email.toUpperCase()}</h1>\n            <IconButton style={{ width: \"auto\", height: 20, marginTop: 20 }} onClick={openupload}><PostAdd style={{ color: \"orange\" }} /><h6 tyle={{ fontFamily: \"monospace\" }}>Add post</h6></IconButton>\n          </div> : null\n      }\n      <h1 className=\"post\"> Posts </h1>\n      <div className=\"posts_view\">\n        <Grid container spacing={1} className={classes.root}>\n          {\n            post.length > 0 ? post.map(post => (\n              <Grid item xs={\"auto\"} className={classes.gridList} key={post._id} >\n                <Uposts comment={post.comments} like={post.like} img={post.img} post={post.post} key={post._id} />\n              </Grid>\n            )) : <h1 style={{ paddingBottom: 10 }}>Add a post+ </h1>\n          }\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default Users;\n","/home/jay/React_app/Community_app/src/firebaseConfig/firebase.js",[],"/home/jay/React_app/Community_app/src/component/post.js",["70","71"],"import React, { useState, useEffect } from 'react'\nimport \"./post.css\"\nimport { auth } from \"../firebaseConfig/firebase\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\"\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { FavoriteBorder, CommentOutlined } from \"@material-ui/icons\";\nimport Axios from \"axios\";\nimport DeleteForever from \"@material-ui/icons/DeleteForever\";\nimport ReactPlayer from 'react-player';\nimport { useStateValue } from \"../StateProvider\";\n\n\nfunction Post({ postid, img, username, comment, post, userurl, like }) {\n    const [{ user }, dispatch] = useStateValue();\n    const [comments, setComment] = useState(\"\");\n    const [commentapi, setCommentapi] = useState([]);\n    const [state, setState] = useState(false);\n    const [iconcolor, setColor] = useState(\"\");\n    const [liked, setLike] = useState(false);\n    const [Likes, setLikes] = useState(Object.keys(like).length);\n\n    function CheckString(url) {\n        const str = url.split(\"?\");\n        const final = str[0].split(\".\");\n        var arr = [\"jpeg\", \"jpg\", \"gif\", \"png\"];\n        if (arr.includes(final[5])) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    function handlecomment(e, commentId) {\n        e.preventDefault();\n        Axios.delete(\"http://localhost:9000/post/\" + postid + \"/comments/\" + commentId).then((response) => {\n            if (response.status === 200) {\n                setState(true);\n            }\n\n        }).catch((err) => {\n            alert(err.message);\n        })\n    }\n\n    const addcomment = async (e) => {\n        e.preventDefault();\n        try {\n            var response = await Axios.post(\"http://localhost:9000/post/\" + postid + \"/comments\", {\n                userimg: auth.currentUser.photoURL,\n                userid: auth.currentUser.uid,\n                text: comments,\n                username: auth.currentUser.email\n            });\n            if (response.status === 200) {\n                setComment(\"\");\n                setState(true);\n            }\n        } catch (err) {\n            alert(err.message);\n        }\n    }\n    useEffect(() => {\n        setCommentapi(JSON.parse(JSON.stringify(comment)));\n        if (state === true) {\n            getComment();\n            setState(false);\n        }\n    }, [state])\n    async function getComment() {\n        try {\n            var response = await Axios.get(\"http://localhost:9000/post/\" + postid + \"/comments\");\n            if (response.status === 200) {\n                setCommentapi(response.data);\n            }\n        } catch (err) {\n            alert(err.message);\n        }\n    }\n    const handleClick = (e) => {\n        e.preventDefault();\n        Axios.post(\"http://localhost:9000/post/\" + postid + \"/like\", {\n            id: \"\" + auth.currentUser.uid\n        }).then((response) => {\n            if (response.status === 200) {\n                setLikes(Likes + 1);\n                setColor('orange');\n                setLike(true);\n            }\n        }).catch((err) => {\n            alert(err.message);\n        })\n    }\n    return (\n        <div className=\"Post\">\n            <div className=\"post_header\">\n                <Avatar\n                    className=\"post_avatar\"\n                    alt={userurl}\n                    src={userurl}\n\n                />\n                <h3 className=\"post_text\">{username.toUpperCase()}</h3>\n            </div>\n            {\n                CheckString(img) ? <img className=\"post_image\" src={img} alt={img} /> :\n                    <ReactPlayer url={img} controls={true} loop={true} playing={true} width=\"100%\" height=\"60vh\" />\n            }\n            {\n                user ? <div style={{ display: \"flex\" }}>\n                    {\n                        auth.currentUser ? liked ? null : like.map(docs => (\n                            docs.id === auth.currentUser.uid ? setLike(true) : null\n                        )) : null\n                    }\n                    <IconButton onClick={auth.currentUser ? !liked ? handleClick : null : null}><FavoriteBorder style={{ color: liked ? \"orange\" : `${iconcolor}` }} /></IconButton>\n                    <h6 style={{ fontFamily: \"monospace\" }}>{Likes}</h6>\n                    <CommentOutlined style={{ color: \"orange\", marginTop: 5, marginLeft: 10 }} />\n                    <h6 style={{ fontFamily: \"monospace\", marginLeft: 10 }}>{Object.keys(commentapi).length}</h6>\n                </div> : null\n            }\n            <h3 className=\"post_name\"><strong>{post.toUpperCase()}</strong></h3>\n            <div className=\"comments\">\n                {\n                    commentapi ? commentapi.map(docs => (\n                        <div className=\"post_comments\" key={docs._id}>\n                            <div style={{ display: 'flex', width: 'auto' }}>\n                                <Avatar style={{ height: 25, width: 25, marginRight: 10 }} alt={docs.userimg} src={docs.userimg} />\n                                <h5>{docs.username.toUpperCase()}</h5>\n                                {auth.currentUser ? docs.userid === auth.currentUser.uid ? <IconButton style={{ color: \"red\", padding: 0, marginLeft: 10 }} onClick={(e) => { handlecomment(e, docs._id) }}><DeleteForever style={{ height: 18, width: 18 }} /></IconButton> : null : null}\n                            </div>\n                            <h5 className=\"comments_text\">{docs.text}</h5>\n                        </div>\n                    )) : <h4>No Comments</h4>\n                }\n            </div>\n            {\n                user != null ? <form className=\"comment_box\" onSubmit={addcomment}>\n                    <input className=\"comment_input\" type=\"text\" placeholder=\" Add comment here\" value={comments} onChange={(e) => { setComment(e.target.value) }} />\n                    <Button className=\"add_comment\" disabled={!comments} >Add</Button>\n                </form> : <h6 style={{ color: 'Orangered', textAlign: \"center\", paddingBottom: 5, fontFamily: \"monospace\" }}>Login to comment!!</h6>\n            }\n        </div>\n    )\n}\n\nexport default Post;\n","/home/jay/React_app/Community_app/src/component/Uposts.js",[],"/home/jay/React_app/Community_app/src/component/Search.js",["72"],"import React, { useContext } from 'react'\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Post from \"./post\";\nimport { SearchPost, SearchUser } from \"../Context\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        justifyContent: 'space-evenly',\n        marginTop: 10\n    },\n    gridList: {\n        padding: theme.spacing(1)\n    },\n}));\n\nfunction Search() {\n    const { searchuser, setValue } = useContext(SearchUser);\n    const { searchpost, setPost } = useContext(SearchPost);\n    React.useEffect(() => {\n        setValue(JSON.parse(window.localStorage.getItem(\"value\")));\n        setPost(JSON.parse(window.localStorage.getItem(\"post\")));\n    }, [])\n    const classes = useStyles();\n    return (\n        <div className=\"search\">\n            {\n                Object.keys(searchuser).length > 0 ? <div className=\"user_header\">\n                    <img className=\"profile_image\" alt={searchuser[0].userimg} src={searchuser[0].userimg} />\n                    <h1 style={{ fontFamily: \"monospace\" }} >{searchuser[0].username.toUpperCase()}</h1>\n                </div> : <h6>Search the USer</h6>\n            }\n            <h1 className=\"post\"> Posts </h1>\n            <div className=\"posts_view\">\n                <Grid container spacing={1} className={classes.root}>\n                    {\n                        searchpost != null ? searchpost.map(post => (\n                            <Grid item xs={\"auto\"} className={classes.gridList} key={post._id} >\n                                <Post postid={post._id} img={post.img} username={post.username} post={post.post} comment={post.comments} userurl={post.userimg} like={post.like} key={post._id} />\n                            </Grid>\n                        )) : <h1 style={{ paddingBottom: 10 }}>No Post to show</h1>\n                    }\n                </Grid>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Search\n","/home/jay/React_app/Community_app/src/StateProvider.js",[],"/home/jay/React_app/Community_app/src/reducer.js",[],"/home/jay/React_app/Community_app/src/Context.js",[],"/home/jay/React_app/Community_app/src/component/CovidNews.js",["73","74"],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":11,"column":10,"nodeType":"81","messageId":"82","endLine":11,"endColumn":31},{"ruleId":"79","severity":1,"message":"83","line":21,"column":11,"nodeType":"81","messageId":"82","endLine":21,"endColumn":21},{"ruleId":"79","severity":1,"message":"84","line":22,"column":11,"nodeType":"81","messageId":"82","endLine":22,"endColumn":21},{"ruleId":"79","severity":1,"message":"85","line":28,"column":20,"nodeType":"81","messageId":"82","endLine":28,"endColumn":28},{"ruleId":"79","severity":1,"message":"85","line":15,"column":22,"nodeType":"81","messageId":"82","endLine":15,"endColumn":30},{"ruleId":"86","severity":1,"message":"87","line":70,"column":8,"nodeType":"88","endLine":70,"endColumn":15,"suggestions":"89"},{"ruleId":"86","severity":1,"message":"90","line":25,"column":8,"nodeType":"88","endLine":25,"endColumn":10,"suggestions":"91"},{"ruleId":"86","severity":1,"message":"92","line":10,"column":8,"nodeType":"88","endLine":10,"endColumn":10,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":14,"column":33,"nodeType":"96","messageId":"97","endLine":14,"endColumn":35},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'WbIncandescentTwoTone' is defined but never used.","Identifier","unusedVar","'searchuser' is assigned a value but never used.","'searchpost' is assigned a value but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'comment' and 'getComment'. Either include them or remove the dependency array. If 'setCommentapi' needs the current value of 'comment', you can also switch to useReducer instead of useState and read 'comment' in the reducer.","ArrayExpression",["100"],"React Hook React.useEffect has missing dependencies: 'setPost' and 'setValue'. Either include them or remove the dependency array.",["101"],"React Hook React.useEffect has a missing dependency: 'getdata'. Either include it or remove the dependency array.",["102"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [comment, getComment, state]",{"range":"109","text":"110"},"Update the dependencies array to be: [setPost, setValue]",{"range":"111","text":"112"},"Update the dependencies array to be: [getdata]",{"range":"113","text":"114"},[2344,2351],"[comment, getComment, state]",[740,742],"[setPost, setValue]",[237,239],"[getdata]"]